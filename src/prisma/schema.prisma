generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String             @id @default(cuid())
  email              String             @unique
  name               String?
  password           String
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  articles           Article[]
  lastEditedArticles Article[]          @relation("LastEditedArticles")
  knowledgeBases     KnowledgeBase[]
  Organization       Organization[]
  organizations      OrganizationUser[]
}

model Organization {
  id             String             @id @default(uuid())
  name           String             @unique
  ownerId        String
  createdAt      DateTime           @default(now())
  updatedAt      DateTime           @updatedAt
  knowledgeBases KnowledgeBase[]
  owner          User               @relation(fields: [ownerId], references: [id])
  members        OrganizationUser[]
}

model OrganizationUser {
  id             String           @id @default(uuid())
  userId         String
  organizationId String
  role           OrganizationRole
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  organization   Organization     @relation(fields: [organizationId], references: [id])
  user           User             @relation(fields: [userId], references: [id])
}

model KnowledgeBase {
  id             String       @id @default(uuid())
  title          String
  description    String?
  organizationId String
  creatorId      String
  access         AccessLevel  @default(PRIVATE)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  articles       Article[]
  creator        User         @relation(fields: [creatorId], references: [id])
  organization   Organization @relation(fields: [organizationId], references: [id])
}

model Article {
  id              String        @id @default(uuid())
  title           String
  content         String
  knowledgeBaseId String
  creatorId       String
  lastEditorId    String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
  creator         User          @relation(fields: [creatorId], references: [id])
  knowledgeBase   KnowledgeBase @relation(fields: [knowledgeBaseId], references: [id], onDelete: Cascade)
  lastEditor      User?         @relation("LastEditedArticles", fields: [lastEditorId], references: [id])
}

enum OrganizationRole {
  OWNER
  ADMIN
  MEMBER
  VIEWER
}

enum AccessLevel {
  PUBLIC
  PRIVATE
  ORGANIZATION
}
